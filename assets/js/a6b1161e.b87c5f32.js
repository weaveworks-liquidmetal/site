"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[7024],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var a=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var i=a.createContext({}),d=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=d(e.components);return a.createElement(i.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,r=e.originalType,i=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=d(n),m=l,k=u["".concat(i,".").concat(m)]||u[m]||p[m]||r;return n?a.createElement(k,o(o({ref:t},c),{},{components:n})):a.createElement(k,o({ref:t},c))}));function m(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=n.length,o=new Array(r);o[0]=u;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:l,o[1]=s;for(var d=2;d<r;d++)o[d]=n[d];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},9178:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>p,frontMatter:()=>r,metadata:()=>s,toc:()=>d});var a=n(7462),l=(n(7294),n(3905));const r={},o="Teardown",s={unversionedId:"tutorial-basics/teardown",id:"tutorial-basics/teardown",title:"Teardown",description:"Follow these steps to delete your Liquid Metal workload cluster and reset your",source:"@site/docs/tutorial-basics/teardown.md",sourceDirName:"tutorial-basics",slug:"/tutorial-basics/teardown",permalink:"/site/docs/tutorial-basics/teardown",draft:!1,editUrl:"https://github.com/weaveworks-liquidmetal/site/tree/main/docs/tutorial-basics/teardown.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Inspect the environment",permalink:"/site/docs/tutorial-basics/inspect"},next:{title:"Congratulations!",permalink:"/site/docs/tutorial-basics/congratulations"}},i={},d=[{value:"Delete the Liquid Metal workload cluster",id:"delete-the-liquid-metal-workload-cluster",level:2},{value:"Stop the management cluster",id:"stop-the-management-cluster",level:2},{value:"Stop <code>flintlockd</code>",id:"stop-flintlockd",level:2},{value:"Stop <code>containerd</code>",id:"stop-containerd",level:2},{value:"Clean up devpools",id:"clean-up-devpools",level:2},{value:"Remove the virtual network, bridge and tap device",id:"remove-the-virtual-network-bridge-and-tap-device",level:2},{value:"Clean up files",id:"clean-up-files",level:2}],c={toc:d};function p(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"teardown"},"Teardown"),(0,l.kt)("p",null,"Follow these steps to delete your Liquid Metal workload cluster and reset your\nLiquid Metal platform environment."),(0,l.kt)("h2",{id:"delete-the-liquid-metal-workload-cluster"},"Delete the Liquid Metal workload cluster"),(0,l.kt)("admonition",{type:"caution"},(0,l.kt)("p",{parentName:"admonition"},"Do not delete a CAPI-created workload cluster with ",(0,l.kt)("inlineCode",{parentName:"p"},"kubectl delete -f cluster.yaml"),".")),(0,l.kt)("p",null,"Delete the cluster using ",(0,l.kt)("inlineCode",{parentName:"p"},"kubectl")," and the cluster name:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl delete cluster $CLUSTER_NAME\n")),(0,l.kt)("p",null,"This may take a moment as the CAPMVM controller reconciles all the MicroVMs."),(0,l.kt)("p",null,"Output:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'cluster.cluster.x-k8s.io "lm-demo" deleted\n')),(0,l.kt)("h2",{id:"stop-the-management-cluster"},"Stop the management cluster"),(0,l.kt)("p",null,"Use ",(0,l.kt)("inlineCode",{parentName:"p"},"kind")," to delete the cluster:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"kind delete cluster --name lm-management\n")),(0,l.kt)("h2",{id:"stop-flintlockd"},"Stop ",(0,l.kt)("inlineCode",{parentName:"h2"},"flintlockd")),(0,l.kt)("p",null,"Use ",(0,l.kt)("inlineCode",{parentName:"p"},"systemctl")," to stop and disable the service:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"sudo systemctl stop flintlockd.service\nsudo systemctl disable flintlockd.service\n")),(0,l.kt)("p",null,"Remove the service file:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"sudo rm /etc/systemd/system/flintlockd.service\n")),(0,l.kt)("p",null,"Reload the daemon:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"sudo systemctl daemon-reload\n")),(0,l.kt)("p",null,"Check that the service is no longer there:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"systemctl status flintlockd.service\n")),(0,l.kt)("p",null,"Output:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"Unit flintlockd.service could not be found.\n")),(0,l.kt)("h2",{id:"stop-containerd"},"Stop ",(0,l.kt)("inlineCode",{parentName:"h2"},"containerd")),(0,l.kt)("p",null,"Use ",(0,l.kt)("inlineCode",{parentName:"p"},"systemctl")," to stop and disable the service:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"sudo systemctl stop containerd-dev.service\nsudo systemctl disable containerd-dev.service\n")),(0,l.kt)("p",null,"Remove the service file:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"sudo rm /etc/systemd/system/containerd-dev.service\n")),(0,l.kt)("p",null,"Reload the daemon:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"sudo systemctl daemon-reload\n")),(0,l.kt)("p",null,"Check that the service is no longer there:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"systemctl status containerd-dev.service\n")),(0,l.kt)("p",null,"Output:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"Unit containerd-dev.service could not be found.\n")),(0,l.kt)("h2",{id:"clean-up-devpools"},"Clean up devpools"),(0,l.kt)("p",null,"Use the ",(0,l.kt)("inlineCode",{parentName:"p"},"dmsetup")," command to remove any leftover thin devices:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"sudo dmsetup ls | awk '/flintlock/ {print $1}' | xargs sudo dmsetup remove -f\n")),(0,l.kt)("admonition",{type:"caution"},(0,l.kt)("p",{parentName:"admonition"},"The above command filters for devices matching ",(0,l.kt)("inlineCode",{parentName:"p"},"flintlock"),". If you use\ndevice-mapper to manage other devices, and are abundantly cautious you may want,\nto remove ",(0,l.kt)("inlineCode",{parentName:"p"},"flintlock-")," devices individually.")),(0,l.kt)("p",null,"Verify that all have been cleared:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"sudo dmsetup ls\n")),(0,l.kt)("p",null,"Output:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"No devices found\n")),(0,l.kt)("p",null,"Detach the loop devices:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"losetup | awk '/containerd-dev/ {print $1}' | xargs -I {} sudo losetup -d {}\n")),(0,l.kt)("p",null,"Delete the sparse files:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"sudo rm /var/lib/containerd-dev/snapshotter/devmapper/{data,metadata}\n")),(0,l.kt)("h2",{id:"remove-the-virtual-network-bridge-and-tap-device"},"Remove the virtual network, bridge and tap device"),(0,l.kt)("p",null,"Use ",(0,l.kt)("inlineCode",{parentName:"p"},"virsh")," to destroy and undefine the network:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"sudo virsh net-destroy liquid-metal\nsudo virsh net-undefine liquid-metal\n")),(0,l.kt)("p",null,"Check that it is no longer there:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"virsh net-list\n")),(0,l.kt)("p",null,"Output:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"}," Name       State    Autostart   Persistent\n---------------------------------------------\n default    active   yes         yes\n")),(0,l.kt)("p",null,"Bring the tap down and delete it:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"sudo ip link set tap0 down\nsudo ip link delete tap0\n")),(0,l.kt)("p",null,"Verify that the tap and bridge are gone:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"ip link show tap0\nip link show lmbr0\n")),(0,l.kt)("p",null,"Both should return:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'Device "X" does not exist.\n')),(0,l.kt)("h2",{id:"clean-up-files"},"Clean up files"),(0,l.kt)("p",null,"Remove any leftover files or directories:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"sudo rm -rf \\\n  /var/lib/containerd-dev \\\n  /run/containerd-dev \\\n  /etc/containerd/config-dev.toml \\\n  /etc/opt/flintlockd \\\n  /var/lib/flintlock\n")))}p.isMDXComponent=!0}}]);