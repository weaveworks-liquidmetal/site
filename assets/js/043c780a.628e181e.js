"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[2036],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>d});var o=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=o.createContext({}),p=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},m=function(e){var t=p(e.components);return o.createElement(l.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},h=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),u=p(n),h=a,d=u["".concat(l,".").concat(h)]||u[h]||c[h]||i;return n?o.createElement(d,r(r({ref:t},m),{},{components:n})):o.createElement(d,r({ref:t},m))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,r=new Array(i);r[0]=h;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:a,r[1]=s;for(var p=2;p<i;p++)r[p]=n[p];return o.createElement.apply(null,r)}return o.createElement.apply(null,n)}h.displayName="MDXCreateElement"},8062:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>c,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var o=n(7462),a=(n(7294),n(3905));const i={title:"How do I develop and submit my work?"},r="Contributing to Liquid Metal repos",s={unversionedId:"community/contributing/contributing",id:"community/contributing/contributing",title:"How do I develop and submit my work?",description:"Each component will have its own dedicated contribution guide along with specific",source:"@site/docs/community/contributing/contributing.md",sourceDirName:"community/contributing",slug:"/community/contributing/",permalink:"/site/docs/community/contributing/",draft:!1,editUrl:"https://github.com/weaveworks-liquidmetal/site/tree/main/docs/community/contributing/contributing.md",tags:[],version:"current",frontMatter:{title:"How do I develop and submit my work?"},sidebar:"community",previous:{title:"What can I work on?",permalink:"/site/docs/community/contributing/choices"},next:{title:"How can I get help?",permalink:"/site/docs/community/contributing/support"}},l={},p=[{value:"Working on your solution",id:"working-on-your-solution",level:2},{value:"PR submission guidelines",id:"pr-submission-guidelines",level:2},{value:"Commit message formatting",id:"commit-message-formatting",level:3},{value:"Reviewing PRs",id:"reviewing-prs",level:2}],m={toc:p},u="wrapper";function c(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,o.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"contributing-to-liquid-metal-repos"},"Contributing to Liquid Metal repos"),(0,a.kt)("p",null,"Each component will have its own dedicated contribution guide along with specific\nenvironment setup instructions. (",(0,a.kt)("em",{parentName:"p"},"If they don't, or they are wrong, why not contribute some?")," \ud83d\ude09)"),(0,a.kt)("p",null,"You can follow the links from the ",(0,a.kt)("a",{parentName:"p",href:"/docs/community/contributing/choices"},"previous page"),"\nwhich will take you to the repos' github pages and individual ",(0,a.kt)("inlineCode",{parentName:"p"},"CONTRIBUTING.md")," guides."),(0,a.kt)("p",null,"Here are some steps and guidelines which will apply to all, so read these first before you\nhead off to your chosen repo \ud83c\udfc3\u200d\u2642\ufe0f."),(0,a.kt)("h2",{id:"working-on-your-solution"},"Working on your solution"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Create a fork of the component repo and clone your fork. ",(0,a.kt)("em",{parentName:"p"},"Pay attention to what\nthe specific component's docs say about")," where ",(0,a.kt)("em",{parentName:"p"},"you should clone the repo locally"),".\nYou may also want to add the original repo to your remotes to keep up to date\nwith upstream changes.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Follow the repo's instructions to set up your environment.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Run the unit tests.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Create a new branch for your work."),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"git checkout -b <feature-name>\n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Write your solution, making sure you stick to repo patterns and practices.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Try to commit in small chunks so that changes are well described\nand not lumped in with something unrelated. This will make debugging easier in\nthe future. Make sure commit messages are in the ",(0,a.kt)("a",{parentName:"p",href:"#commit-message-formatting"},"proper format"),".")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Ensure that every commit you intend to be merged is ",(0,a.kt)("strong",{parentName:"p"},"compilable")," and that the\ntests run successfully at that point.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Make sure your commits are ",(0,a.kt)("a",{parentName:"p",href:"https://docs.github.com/en/authentication/managing-commit-signature-verification/signing-commits"},"signed"),".")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"All code contributions must be submitted with unit tests"),". Each repo will\ndetail or demonstrate what appropriate testing looks like.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"For extra special bonus points, if you see any tests missing from the area you are\nworking on, please add them! It will be much appreciated \u2764\ufe0f .")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Check any documentation and update it to cover your changes if applicable.\nIf your change will impact the next version of the product, you will also need to\nupdate the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/weaveworks-liquidmetal/site"},"site")," to describe any new user actions or API features.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Before you ",(0,a.kt)("a",{parentName:"p",href:"#pr-submission-guidelines"},"open your PR"),", run all the unit and any other tests and manually\nverify that your solution works."))),(0,a.kt)("h2",{id:"pr-submission-guidelines"},"PR submission guidelines"),(0,a.kt)("p",null,"Push your changes to the branch on your fork and submit a pull request to the original repository\nagainst the ",(0,a.kt)("inlineCode",{parentName:"p"},"main")," branch.\nWhere possible, please squash your commits to ensure a tidy and descriptive history.\nMake sure each commit which will be merged is compilable with the tests passing at\nthat point."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"git push <remote-name> <feature-name>\n")),(0,a.kt)("p",null,"If your PR is still a work in progress, please open a ",(0,a.kt)("a",{parentName:"p",href:"https://github.blog/2019-02-14-introducing-draft-pull-requests/"},"Draft PR"),"\nand prefix your title with the word ",(0,a.kt)("inlineCode",{parentName:"p"},"WIP"),". When your PR is ready for review, you\ncan change the title and remove the Draft setting."),(0,a.kt)("p",null,"Our GitHub Actions integration will run any automated checks. We will review your\nchanges and give you feedback as soon as possible."),(0,a.kt)("p",null,"We recommend that you regularly rebase from ",(0,a.kt)("inlineCode",{parentName:"p"},"main")," of the original repo to keep your\nbranch up to date."),(0,a.kt)("p",null,"Please ensure that ",(0,a.kt)("inlineCode",{parentName:"p"},"Allow edits and access to secrets by maintainers")," is checked.\nWhile the maintainers will of course wait for you to edit your own work, if you are\nunresponsive for over a week, they may add corrections or even complete the work for you,\nespecially if what you are contributing is very cool \ud83e\udd18 ."),(0,a.kt)("p",null,"PRs which adhere to our guidelines are more likely to be accepted\n(when opening the PR, please use the checklist in the template if there is one for that repo):"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"The description is thorough.")," When writing your description, please be as detailed as possible: don't make people\nguess what you did or simply link back to the issue (the issue explains the problem\nyou are trying to solve, not how you solved it.)\nGuide your reviewers through your solution by highlighting\nkey changes and implementation choices. Try and pre-empt any obvious questions\nthey may have. Providing snippets (or screenshots) of output is very helpful to\ndemonstrate new behaviour or UX changes. (Snippets are more searchable than screenshots,\nbut we wont be mad at a sneak peek at your terminal envs \ud83d\udc40 .)")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"The change has been manually tested.")," If you are supplying output above\nthen that can be your manual test, with proof \ud83d\udc4f.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"The PR has a snappy title"),". Your PR title will end up in the release notes,\nso make it a good one. Using the same rule as for the title of a ",(0,a.kt)("a",{parentName:"p",href:"#commit-message-formatting"},"commit message"),"\nis generally a good idea. Try to use the ",(0,a.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Imperative_mood"},"imperative")," and centre it around the behaviour\nor the user value it delivers, rather than any implementation detail."),(0,a.kt)("p",{parentName:"li"},"  eg: ",(0,a.kt)("inlineCode",{parentName:"p"},'"changed SomeFunc in file.go to also do thing X"'),"\nis not useful for folks stopping by to quickly see what new stuff they can do with\nthe component, save that for commit messages or the PR description.\nThe title ",(0,a.kt)("inlineCode",{parentName:"p"},'"(feat): Add support for XYZ"')," conveys the intent concisely and clearly.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"There are new tests for new code.")," This is very much required.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"There are new tests for old code in the same area!"),' This will earn you the title of "Best Loved\nand Respected Contributor" \ud83d\udca5 \ud83d\ude0e .')),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"There are well-written commit messages")," (",(0,a.kt)("a",{parentName:"p",href:"#commit-message-formatting"},"see below"),")\nwhich will make future debugging fun. (Any commits of the variety ",(0,a.kt)("inlineCode",{parentName:"p"},'"fix stuff"'),", ",(0,a.kt)("inlineCode",{parentName:"p"},'"does thing"'),"\nor ",(0,a.kt)("inlineCode",{parentName:"p"},'"my god why"')," must be squashed or rebased.)")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Each of those well-written commits is compilable")," and the tests run successfully at\nthat point."))),(0,a.kt)("p",null,"In general, we will merge a PR once someone in the team has reviewed and approved it.\nTrivial changes (e.g., corrections to spelling) may get waved through quickly.\nFor substantial changes, more people may become involved, and you might get asked to resubmit the PR or divide the\nchanges into more than one PR if there is too much going on."),(0,a.kt)("h3",{id:"commit-message-formatting"},"Commit message formatting"),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"For more on how to write great commit messages, and why you should, check out\n",(0,a.kt)("a",{parentName:"em",href:"https://chris.beams.io/posts/git-commit/"},"this excellent blog post"),".")),(0,a.kt)("p",null,"We follow a rough convention for commit messages that is designed to answer three\nquestions: what changed, why was the change made, and how did you make it."),(0,a.kt)("p",null,"The subject line should feature the ",(0,a.kt)("em",{parentName:"p"},"what")," and\nthe body of the commit should describe the ",(0,a.kt)("em",{parentName:"p"},"why")," and ",(0,a.kt)("em",{parentName:"p"},"how"),".\nIf you encountered any weirdness along the way, this is a good place\nto note what you discovered and how you solved it."),(0,a.kt)("p",null,"An example of a stellar commit message can be found ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/weaveworks-liquidmetal/flintlock/commit/7a30dd99dc7c05827ba11050505c476799bb2932"},"here"),"."),(0,a.kt)("p",null,"The format can be described more formally as follows:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},"<short title for what changed, <=70 characters>\n<BLANK LINE>\n<why this change was made and what changed>\n<BLANK LINE>\n<any interesting details>\n")),(0,a.kt)("p",null,"The first line is the subject and should be no longer than 70 characters, the\nsecond line is always blank, and other lines should be wrapped at a max of 80 characters.\nThis allows the message to be easier to read on GitHub as well as in various git tools."),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://gist.github.com/yitsushi/656e68c7db141743e81b7dcd23362f1a"},"Here")," is a template which you can add to your local git config which will\nmake commit messages easy."),(0,a.kt)("h2",{id:"reviewing-prs"},"Reviewing PRs"),(0,a.kt)("p",null,"The core team aims to clear the PR queue as quickly as possible. Community members\nshould also feel free to keep an eye on things and provide their own thoughts and expertise."),(0,a.kt)("p",null,"High-value and/or high priority contributions will be processed as quickly as possible,\nwhile lower priority or nice-to-have things may take a little longer to get approved."),(0,a.kt)("p",null,"To help facilitate a smoother and faster review, follow the guidelines ",(0,a.kt)("a",{parentName:"p",href:"#pr-submission-guidelines"},"above"),".\nSubmissions which do not meet standards will be de-prioritised for review."))}c.isMDXComponent=!0}}]);